//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EIPOutMsgSvcsReference
{
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public partial class WSException
    {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=0)]
        public string Message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public partial class PayloadType
    {
        
        private uint lengthField;
        
        private bool lengthFieldSpecified;
        
        private string contentTypeField;
        
        private string filenameField;
        
        private PayloadTypeType typeField;
        
        private object itemField;
        
        private ItemChoiceType itemElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public uint Length
        {
            get
            {
                return this.lengthField;
            }
            set
            {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthSpecified
        {
            get
            {
                return this.lengthFieldSpecified;
            }
            set
            {
                this.lengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string ContentType
        {
            get
            {
                return this.contentTypeField;
            }
            set
            {
                this.contentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string Filename
        {
            get
            {
                return this.filenameField;
            }
            set
            {
                this.filenameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public PayloadTypeType Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Binary", typeof(byte[]), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="hexBinary", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute("Reference", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        [System.Xml.Serialization.XmlElementAttribute("Text", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType ItemElementName
        {
            get
            {
                return this.itemElementNameField;
            }
            set
            {
                this.itemElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public enum PayloadTypeType
    {
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        Binary,
        
        /// <remarks/>
        Reference,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Binary")]
        Binary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Reference")]
        Reference,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Text")]
        Text,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public partial class SecondaryServiceType
    {
        
        private SecondaryServicesType typeField;
        
        private bool typeFieldSpecified;
        
        private IdentityType idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public SecondaryServicesType Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified
        {
            get
            {
                return this.typeFieldSpecified;
            }
            set
            {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public IdentityType Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public enum SecondaryServicesType
    {
        
        /// <remarks/>
        Transactional,
        
        /// <remarks/>
        Configuration,
        
        /// <remarks/>
        Application,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public partial class IdentityType
    {
        
        private string idField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public partial class ServiceType
    {
        
        private IdentityType primaryField;
        
        private SecondaryServiceType[] secondaryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public IdentityType Primary
        {
            get
            {
                return this.primaryField;
            }
            set
            {
                this.primaryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Secondary", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public SecondaryServiceType[] Secondary
        {
            get
            {
                return this.secondaryField;
            }
            set
            {
                this.secondaryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public partial class RoutingType
    {
        
        private int priorityField;
        
        private bool priorityFieldSpecified;
        
        private BaseResourceType sourceField;
        
        private BaseResourceType[] destinationField;
        
        private ServiceType[] serviceField;
        
        private MobileTransportType mobileTransportField;
        
        private bool mobileTransportFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int Priority
        {
            get
            {
                return this.priorityField;
            }
            set
            {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrioritySpecified
        {
            get
            {
                return this.priorityFieldSpecified;
            }
            set
            {
                this.priorityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public BaseResourceType Source
        {
            get
            {
                return this.sourceField;
            }
            set
            {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Destination", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public BaseResourceType[] Destination
        {
            get
            {
                return this.destinationField;
            }
            set
            {
                this.destinationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Service", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public ServiceType[] Service
        {
            get
            {
                return this.serviceField;
            }
            set
            {
                this.serviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public MobileTransportType MobileTransport
        {
            get
            {
                return this.mobileTransportField;
            }
            set
            {
                this.mobileTransportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MobileTransportSpecified
        {
            get
            {
                return this.mobileTransportFieldSpecified;
            }
            set
            {
                this.mobileTransportFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public partial class BaseResourceType
    {
        
        private string keyField;
        
        private ResourceType typeField;
        
        private string systemAssignedIdField;
        
        private string customerAssignedIdField;
        
        private BaseResourceType[] dependentsField;
        
        private AuditType lastChangeField;
        
        private NameValueType[] extendedDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public ResourceType Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string SystemAssignedId
        {
            get
            {
                return this.systemAssignedIdField;
            }
            set
            {
                this.systemAssignedIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string CustomerAssignedId
        {
            get
            {
                return this.customerAssignedIdField;
            }
            set
            {
                this.customerAssignedIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Resource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public BaseResourceType[] Dependents
        {
            get
            {
                return this.dependentsField;
            }
            set
            {
                this.dependentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public AuditType LastChange
        {
            get
            {
                return this.lastChangeField;
            }
            set
            {
                this.lastChangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtendedData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public NameValueType[] ExtendedData
        {
            get
            {
                return this.extendedDataField;
            }
            set
            {
                this.extendedDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public enum ResourceType
    {
        
        /// <remarks/>
        AOI,
        
        /// <remarks/>
        Customer,
        
        /// <remarks/>
        Device,
        
        /// <remarks/>
        Driver,
        
        /// <remarks/>
        Group,
        
        /// <remarks/>
        User,
        
        /// <remarks/>
        Vehicle,
        
        /// <remarks/>
        Data,
        
        /// <remarks/>
        Role,
        
        /// <remarks/>
        Route,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IncomingAuditType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OutgoingAuditType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public partial class AuditType
    {
        
        private string keyField;
        
        private System.DateTime dateField;
        
        private string whoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public System.DateTime Date
        {
            get
            {
                return this.dateField;
            }
            set
            {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string Who
        {
            get
            {
                return this.whoField;
            }
            set
            {
                this.whoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public partial class IncomingAuditType : AuditType
    {
        
        private int ackStatusField;
        
        private string ackStatusReasonField;
        
        private ContextType ackContextField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int AckStatus
        {
            get
            {
                return this.ackStatusField;
            }
            set
            {
                this.ackStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string AckStatusReason
        {
            get
            {
                return this.ackStatusReasonField;
            }
            set
            {
                this.ackStatusReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public ContextType AckContext
        {
            get
            {
                return this.ackContextField;
            }
            set
            {
                this.ackContextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public partial class ContextType
    {
        
        private ContextTypeUOMType uOMTypeField;
        
        private bool uOMTypeFieldSpecified;
        
        private bool validField;
        
        private bool validFieldSpecified;
        
        private ContextTypeTransmitOrCreate transmitOrCreateField;
        
        private bool transmitOrCreateFieldSpecified;
        
        private ContextTypeIgnition ignitionField;
        
        private bool ignitionFieldSpecified;
        
        private byte speedField;
        
        private bool speedFieldSpecified;
        
        private float directionField;
        
        private bool directionFieldSpecified;
        
        private System.DateTime posFixTimeField;
        
        private bool posFixTimeFieldSpecified;
        
        private float odometerField;
        
        private bool odometerFieldSpecified;
        
        private float latitudeField;
        
        private bool latitudeFieldSpecified;
        
        private float longitudeField;
        
        private bool longitudeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public ContextTypeUOMType UOMType
        {
            get
            {
                return this.uOMTypeField;
            }
            set
            {
                this.uOMTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UOMTypeSpecified
        {
            get
            {
                return this.uOMTypeFieldSpecified;
            }
            set
            {
                this.uOMTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public bool Valid
        {
            get
            {
                return this.validField;
            }
            set
            {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValidSpecified
        {
            get
            {
                return this.validFieldSpecified;
            }
            set
            {
                this.validFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public ContextTypeTransmitOrCreate TransmitOrCreate
        {
            get
            {
                return this.transmitOrCreateField;
            }
            set
            {
                this.transmitOrCreateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransmitOrCreateSpecified
        {
            get
            {
                return this.transmitOrCreateFieldSpecified;
            }
            set
            {
                this.transmitOrCreateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public ContextTypeIgnition Ignition
        {
            get
            {
                return this.ignitionField;
            }
            set
            {
                this.ignitionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IgnitionSpecified
        {
            get
            {
                return this.ignitionFieldSpecified;
            }
            set
            {
                this.ignitionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public byte Speed
        {
            get
            {
                return this.speedField;
            }
            set
            {
                this.speedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpeedSpecified
        {
            get
            {
                return this.speedFieldSpecified;
            }
            set
            {
                this.speedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public float Direction
        {
            get
            {
                return this.directionField;
            }
            set
            {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DirectionSpecified
        {
            get
            {
                return this.directionFieldSpecified;
            }
            set
            {
                this.directionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public System.DateTime PosFixTime
        {
            get
            {
                return this.posFixTimeField;
            }
            set
            {
                this.posFixTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PosFixTimeSpecified
        {
            get
            {
                return this.posFixTimeFieldSpecified;
            }
            set
            {
                this.posFixTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7)]
        public float Odometer
        {
            get
            {
                return this.odometerField;
            }
            set
            {
                this.odometerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OdometerSpecified
        {
            get
            {
                return this.odometerFieldSpecified;
            }
            set
            {
                this.odometerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8)]
        public float Latitude
        {
            get
            {
                return this.latitudeField;
            }
            set
            {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LatitudeSpecified
        {
            get
            {
                return this.latitudeFieldSpecified;
            }
            set
            {
                this.latitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9)]
        public float Longitude
        {
            get
            {
                return this.longitudeField;
            }
            set
            {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LongitudeSpecified
        {
            get
            {
                return this.longitudeFieldSpecified;
            }
            set
            {
                this.longitudeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public enum ContextTypeUOMType
    {
        
        /// <remarks/>
        Omnitracs,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public enum ContextTypeTransmitOrCreate
    {
        
        /// <remarks/>
        Transmit,
        
        /// <remarks/>
        Create,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public enum ContextTypeIgnition
    {
        
        /// <remarks/>
        On,
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public partial class OutgoingAuditType : AuditType
    {
        
        private DistributionType distributionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public DistributionType Distribution
        {
            get
            {
                return this.distributionField;
            }
            set
            {
                this.distributionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public partial class DistributionType
    {
        
        private DistributionDeliveryType deliveryField;
        
        private DistributionStateType stateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public DistributionDeliveryType Delivery
        {
            get
            {
                return this.deliveryField;
            }
            set
            {
                this.deliveryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public DistributionStateType State
        {
            get
            {
                return this.stateField;
            }
            set
            {
                this.stateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public enum DistributionDeliveryType
    {
        
        /// <remarks/>
        Jms,
        
        /// <remarks/>
        Email,
        
        /// <remarks/>
        Ftp,
        
        /// <remarks/>
        Dequeue,
        
        /// <remarks/>
        Inforouter,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public enum DistributionStateType
    {
        
        /// <remarks/>
        Sent,
        
        /// <remarks/>
        Received,
        
        /// <remarks/>
        Pending,
        
        /// <remarks/>
        Processed,
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Acked,
        
        /// <remarks/>
        Nacked,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public partial class NameValueType
    {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public enum MobileTransportType
    {
        
        /// <remarks/>
        Wifi,
        
        /// <remarks/>
        Terrestrial,
        
        /// <remarks/>
        Satellite,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IncomingMessageType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OutgoingMessageType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0")]
    public abstract partial class MessageType
    {
        
        private IdType idField;
        
        private RoutingType routingField;
        
        private string payloadFormatField;
        
        private PayloadType payloadField;
        
        private ContextType payloadContextField;
        
        private BaseResourceType[] resourcesField;
        
        private NameValueType[] metaDataField;
        
        private System.DateTime createdField;
        
        private bool createdFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public IdType Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public RoutingType Routing
        {
            get
            {
                return this.routingField;
            }
            set
            {
                this.routingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string PayloadFormat
        {
            get
            {
                return this.payloadFormatField;
            }
            set
            {
                this.payloadFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public PayloadType Payload
        {
            get
            {
                return this.payloadField;
            }
            set
            {
                this.payloadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public ContextType PayloadContext
        {
            get
            {
                return this.payloadContextField;
            }
            set
            {
                this.payloadContextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Resource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public BaseResourceType[] Resources
        {
            get
            {
                return this.resourcesField;
            }
            set
            {
                this.resourcesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MetaData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public NameValueType[] MetaData
        {
            get
            {
                return this.metaDataField;
            }
            set
            {
                this.metaDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7)]
        public System.DateTime Created
        {
            get
            {
                return this.createdField;
            }
            set
            {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreatedSpecified
        {
            get
            {
                return this.createdFieldSpecified;
            }
            set
            {
                this.createdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public partial class IdType
    {
        
        private string keyField;
        
        private string correlationIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string CorrelationId
        {
            get
            {
                return this.correlationIdField;
            }
            set
            {
                this.correlationIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0")]
    public partial class IncomingMessageType : MessageType
    {
        
        private IncomingAuditType[] auditHistoryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Audit", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public IncomingAuditType[] AuditHistory
        {
            get
            {
                return this.auditHistoryField;
            }
            set
            {
                this.auditHistoryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0")]
    public partial class OutgoingMessageType : MessageType
    {
        
        private OutgoingAuditType[] auditHistoryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Audit", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public OutgoingAuditType[] AuditHistory
        {
            get
            {
                return this.auditHistoryField;
            }
            set
            {
                this.auditHistoryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IncomingAckType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public partial class AckType
    {
        
        private IdType idField;
        
        private int ackStatusField;
        
        private string ackStatusReasonField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public IdType Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public int AckStatus
        {
            get
            {
                return this.ackStatusField;
            }
            set
            {
                this.ackStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string AckStatusReason
        {
            get
            {
                return this.ackStatusReasonField;
            }
            set
            {
                this.ackStatusReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public partial class IncomingAckType : AckType
    {
        
        private BaseResourceType destinationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public BaseResourceType Destination
        {
            get
            {
                return this.destinationField;
            }
            set
            {
                this.destinationField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.ServiceContractAttribute(Name="EIPOutMsgSvcs1.0", Namespace="http://out.msg.websvcs.eip.omnitracs.com/1.0", ConfigurationName="EIPOutMsgSvcsReference.EIPOutMsgSvcs10")]
    public interface EIPOutMsgSvcs10
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EIPOutMsgSvcsReference.WSException), Action="", Name="WSException", Namespace="http://base.data.eip.omnitracs.com/1.0")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageType))]
        System.Threading.Tasks.Task<EIPOutMsgSvcsReference.getMessageResponse> getMessageAsync(EIPOutMsgSvcsReference.getMessageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EIPOutMsgSvcsReference.WSException), Action="", Name="WSException", Namespace="http://base.data.eip.omnitracs.com/1.0")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageType))]
        System.Threading.Tasks.Task<EIPOutMsgSvcsReference.getMessagesResponse> getMessagesAsync(EIPOutMsgSvcsReference.getMessagesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EIPOutMsgSvcsReference.WSException), Action="", Name="WSException", Namespace="http://base.data.eip.omnitracs.com/1.0")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageType))]
        System.Threading.Tasks.Task<EIPOutMsgSvcsReference.getMessagesCountResponse> getMessagesCountAsync(EIPOutMsgSvcsReference.getMessagesCountRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMessageRequest", WrapperNamespace="http://msg.data.eip.omnitracs.com/1.0", IsWrapped=true)]
    public partial class getMessageRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EIPOutMsgSvcsReference.IdType Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AutoAck;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("MessageAck", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EIPOutMsgSvcsReference.AckType[] MessageAck;
        
        public getMessageRequest()
        {
        }
        
        public getMessageRequest(EIPOutMsgSvcsReference.IdType Id, bool AutoAck, EIPOutMsgSvcsReference.AckType[] MessageAck)
        {
            this.Id = Id;
            this.AutoAck = AutoAck;
            this.MessageAck = MessageAck;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMessageResponse", WrapperNamespace="http://msg.data.eip.omnitracs.com/1.0", IsWrapped=true)]
    public partial class getMessageResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Message", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EIPOutMsgSvcsReference.OutgoingMessageType[] Message;
        
        public getMessageResponse()
        {
        }
        
        public getMessageResponse(EIPOutMsgSvcsReference.OutgoingMessageType[] Message)
        {
            this.Message = Message;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://base.data.eip.omnitracs.com/1.0")]
    public enum OutgoingReadStatesType
    {
        
        /// <remarks/>
        Unread,
        
        /// <remarks/>
        Read,
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Delivered,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMessagesRequest", WrapperNamespace="http://msg.data.eip.omnitracs.com/1.0", IsWrapped=true)]
    public partial class getMessagesRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EIPOutMsgSvcsReference.OutgoingReadStatesType ReadState;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EIPOutMsgSvcsReference.RoutingType Routing;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FromKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0", Order=3)]
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("CriteriaData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public EIPOutMsgSvcsReference.NameValueType[] Criteria;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime EndDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AutoAck;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int MaxMessages;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute("MessageAck", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EIPOutMsgSvcsReference.AckType[] MessageAck;
        
        public getMessagesRequest()
        {
        }
        
        public getMessagesRequest(EIPOutMsgSvcsReference.OutgoingReadStatesType ReadState, EIPOutMsgSvcsReference.RoutingType Routing, string FromKey, EIPOutMsgSvcsReference.NameValueType[] Criteria, System.DateTime StartDate, System.DateTime EndDate, bool AutoAck, int MaxMessages, EIPOutMsgSvcsReference.AckType[] MessageAck)
        {
            this.ReadState = ReadState;
            this.Routing = Routing;
            this.FromKey = FromKey;
            this.Criteria = Criteria;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
            this.AutoAck = AutoAck;
            this.MaxMessages = MaxMessages;
            this.MessageAck = MessageAck;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMessagesResponse", WrapperNamespace="http://msg.data.eip.omnitracs.com/1.0", IsWrapped=true)]
    public partial class getMessagesResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Message", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EIPOutMsgSvcsReference.OutgoingMessageType[] Message;
        
        public getMessagesResponse()
        {
        }
        
        public getMessagesResponse(EIPOutMsgSvcsReference.OutgoingMessageType[] Message)
        {
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMessagesCountRequest", WrapperNamespace="http://msg.data.eip.omnitracs.com/1.0", IsWrapped=true)]
    public partial class getMessagesCountRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EIPOutMsgSvcsReference.OutgoingReadStatesType ReadState;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EIPOutMsgSvcsReference.RoutingType Routing;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FromKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0", Order=3)]
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("CriteriaData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public EIPOutMsgSvcsReference.NameValueType[] Criteria;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime EndDate;
        
        public getMessagesCountRequest()
        {
        }
        
        public getMessagesCountRequest(EIPOutMsgSvcsReference.OutgoingReadStatesType ReadState, EIPOutMsgSvcsReference.RoutingType Routing, string FromKey, EIPOutMsgSvcsReference.NameValueType[] Criteria, System.DateTime StartDate, System.DateTime EndDate)
        {
            this.ReadState = ReadState;
            this.Routing = Routing;
            this.FromKey = FromKey;
            this.Criteria = Criteria;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMessagesCountResponse", WrapperNamespace="http://msg.data.eip.omnitracs.com/1.0", IsWrapped=true)]
    public partial class getMessagesCountResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://msg.data.eip.omnitracs.com/1.0", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int MessageCount;
        
        public getMessagesCountResponse()
        {
        }
        
        public getMessagesCountResponse(int MessageCount)
        {
            this.MessageCount = MessageCount;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface EIPOutMsgSvcs10Channel : EIPOutMsgSvcsReference.EIPOutMsgSvcs10, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public partial class EIPOutMsgSvcs10Client : System.ServiceModel.ClientBase<EIPOutMsgSvcsReference.EIPOutMsgSvcs10>, EIPOutMsgSvcsReference.EIPOutMsgSvcs10
    {
        
        public EIPOutMsgSvcs10Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<EIPOutMsgSvcsReference.getMessageResponse> getMessageAsync(EIPOutMsgSvcsReference.getMessageRequest request)
        {
            return base.Channel.getMessageAsync(request);
        }
        
        public System.Threading.Tasks.Task<EIPOutMsgSvcsReference.getMessagesResponse> getMessagesAsync(EIPOutMsgSvcsReference.getMessagesRequest request)
        {
            return base.Channel.getMessagesAsync(request);
        }
        
        public System.Threading.Tasks.Task<EIPOutMsgSvcsReference.getMessagesCountResponse> getMessagesCountAsync(EIPOutMsgSvcsReference.getMessagesCountRequest request)
        {
            return base.Channel.getMessagesCountAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
    }
}
